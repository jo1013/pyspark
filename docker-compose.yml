version: "3.7" # 파일 규격 버전
# docker-compose 버전으로 버전3부터는 links 옵션을 넣지않아도 docker-compose내의 Container는 연결된다.
services: # 이 항목 밑에 실행하려는 컨테이너 들을 정의 ( 컴포즈에서 컨테이너 : 서비스 )

# mysql:
#   container_name: mysql
#   image: mysql:latest
#   restart: always
#   networks:
#    - backend
#   ports:
#    - 3306:3306
#   volumes:
#     - ./db/conf.d:/etc/mysql/conf.d
#     - ./db/data:/var/lib/mysql
#     - ./db/initdb.d:/docker-entrypoint-initdb.d   
#   environment:  
#     - MYSQL_ROOT_PASSWORD=root
#     - MYSQL_USER=sawyer
#     - MYSQL_PASSWORD=root

  airflow:
    image : jo1013/airflowex:0.06
    restart: always
    container_name:  airflow
    ports: 
      - "8090:8080"
    environment: 
      -  LC_ALL=C.UTF-8
    volumes:
      - ~/workspace:/home # -v 옵션 (다렉토리 마운트 설정)

     
  db: # 서비스 명
    image: mysql:8.0.17 # 사용할 이미지
    restart: always
    command: --lower_case_table_names=1
    container_name: db # 컨테이너 이름 설정
    ports:
      - "3306:3306" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)  <- 컨테이너 내부는 무조건 3306
   # env_file: .env
    environment: # -e 옵션
      - MYSQL_DATABASE=testdb
      - MYSQL_ROOT_PASSWORD=root # MYSQL 패스워드 설정 옵션
      - TZ=Asia/Seoul

    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ~/workspace/pyspark/db:/var/lib/mysql # -v 옵션 (다렉토리 마운트 설정)
#    networks:
 #     - backend
    restart: always


  py_spark:
    image : jo1013/pyspark:0.05
    restart : always
    container_name : py_spark

    ports :
      - "8888:8888"
      - "8000:8000"
    volumes:
      - ~/workspace:/home
    stdin_open: true
    tty: true




    # networks:
    #   backend: